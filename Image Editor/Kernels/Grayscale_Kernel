__kernel void grayscale_kernel(__global const int *sourceData,__global int *resultData){
int ALPHA_MASK = 0xff000000;
int ALPHA_OFFSET = 24;
int RED_MASK = 0x00ff0000;
int RED_OFFSET = 16;
int GREEN_MASK = 0x0000ff00;
int GREEN_OFFSET = 8;
int BLUE_MASK = 0x000000ff;
int BLUE_OFFSET = 0;


int i = (get_group_id(0) * get_local_size(0)) + get_local_id(0);

int pixel = sourceData[i];


int alpha = (pixel & ALPHA_MASK) >> ALPHA_OFFSET;
int red = (pixel & RED_MASK) >> RED_OFFSET;
int green = (pixel & GREEN_MASK) >> GREEN_OFFSET;
int blue = (pixel & BLUE_MASK) >> BLUE_OFFSET;

int gray = (int) ((red * 0.299) + (green * 0.587) + (blue * 0.114));

int newRed = gray;
int newGreen = gray;
int newBlue = gray;

int grayPixel = (alpha << ALPHA_OFFSET) | (newRed << RED_OFFSET) |
						(newGreen << GREEN_OFFSET) | (newBlue << BLUE_OFFSET);

resultData[i] = grayPixel;
}